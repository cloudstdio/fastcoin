开个深坑，比特币之山寨币开发

1.目前的资料：
http://blog.csdn.net/wolfoxkao
http://lib.csdn.net/article/blockchain/45844
http://blog.csdn.net/hacode
https://www.jianshu.com/p/6827e958e47f
完整的bitcoin安装blog：https://www.cnblogs.com/wintersun/p/3813424.html
动手编译比特币源码：http://book.51cto.com/art/201711/558953.htm
2.当前计划
　　（1）fastcoin，用的是autotool风格的开发方式，夹杂eclipse的开发工具。因此，我们要学习下emacs的使用，这个一直没有搞定的事情。
　　（2）按照教程，修改参数，跑起来程序，并gitee存档。
　　（3）落地到本地集群，并修改开源描述，删除多余项。
3.正式操作
　　1.emacs
　　　　学会第一个操作是撤销，ctrl-/。
　　　　上下翻屏幕是ctrl-v，alt-v，和正常的很不一样。
　　　　打开文件用ctrl-x ctrl-f，按两次，会定位到home下执行查找。ctrl-x ctrl-s执行保存。
　　　　貌似没有关闭的按键，通过不断打开新的来切换窗口。ctrl-x +左右，切换前后。
 
 4.编译源码(重新更改此节，分为2部分，fastcoin项目，与bitcoin已更新的最新代码)
首先，ubuntu的版本是非常需要关注的，我在ubuntu14下成功了（一开始是ubuntu16，后来出现了非常多的依赖错误，aptitude也搞不定），下载源码
git clone https://github.com/imharrywu/fastcoin
从fastcoin开始，执行./autogen.sh之后，出现报错：libdb_cxx headers missing，百度后找到解释，是berkeleyDB未安装。打开官网oracle下载，提示需要注册。
参考https://www.jianshu.com/p/6827e958e47f中的方法，使用wget下载数据库。参考了这两篇文章：
http://blog.csdn.net/wolfoxkao/article/details/78709410
https://www.jianshu.com/p/8b4ebd0e4b3d
先定位到fastcoin目录下，把db下载到这里。
wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz' 
tar zxvf db-4.8.30.NC.tar.gz
cd db-4.8.30.NC/build_unix/
../dist/configure --enable-cxx --disable-shared --with-pic --prefix=/home/ubuntu/fastcoin/db4/
make
sudo make install
此时，在进行真正源码编译之前，需要先解决依赖问题。（我在ubuntu16下，利用altitude来解决boost和gui的依赖问题，但是仍然问题重重。更换了ubuntu14之后，一次依赖问题都没遇到，十分顺畅。。）
执行下面命令，分别是db、boost、qt、openssl、还有其它各种的依赖包，尤其在ubuntu16这样的高版本上较难搞，14.10版本直接成功。
sudo apt-get install libdb5.1++-dev
sudo apt-get install libdb-dev libdb++-dev
sudo apt-get install libboost-all-dev
sudo apt-get install libqt4-core libqt4-gui libqt4-dev
sudo apt-get install libssl-dev
sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libevent-dev libboost-all-dev libminiupnpc-dev libqt4-dev libprotobuf-de protobuf-compiler libqrencode-dev
sudo ./autogen.sh
sudo ./configure LDFLAGS="-L/home/ubuntu/fastcoin/db4/lib/" CPPFLAGS="-I/home/ubuntu/fastcoin/db4/include/"
有时会报错，4.8版本BDB的问题(一定注意引号中的地址)，但在ubuntu14上一遍成功。
http://book.51cto.com/art/201711/558953.htm
>./configure LDFLAGS="-L/home/ubuntu/fastcoin/db4/lib/" CPPFLAGS="-I/home/ubuntu/fastcoin/db4/include/" --with-incompatible-bdb
 -------------------------------------------------------------
我在安装整个过程中遇到了一个非常值得注意的错误，尤其出现在安装qt-gui和libboost-all-dev上。尝试用aptitude来更改包，然而连sudo apt-get install aptitude也在报错。
ubuntu@ubuntu-ThinkPad-X240:~/bitcoin$ sudo apt-get install aptitude 正在读取软件包列表... 完成 正在分析软件包的依赖关系树        正在读取状态信息... 完成        有一些软件包无法被安装。如果您用的是 unstable 发行版，这也许是 因为系统无法达到您要求的状态造成的。该版本中可能会有一些您需要的软件 包尚未被创建或是它们已被从新到(Incoming)目录移出。 下列信息可能会对解决问题有所帮助：  下列软件包有未满足的依赖关系：  aptitude : 依赖: libcwidget3 但是它将不会被安装             依赖: libsigc++-2.0-0c2a (>= 2.0.2) 但是它将不会被安装             依赖: libxapian22 但是它将不会被安装 E: 无法修正错误，因为您要求某些软件包保持现状，就是它们破坏了软件包间的依赖关系。  
解决方法是：打开 系统设置-》软件和更新-》ubuntu软件 tab-》可从互联网下载，下面的框框全部挑上。
>sudo aptitude install libboost-all-dev 
先选n，会出现第二种处理方式，选择第二种的降级方式。然后再执行./configure........那句，之后即可执行make。
-------------------------------------------------------------
sudo make
sudo make install
 到此，fastcoin编译完成，可通过下列指令执行
前端
bitcoin-qt
服务端
bitcoind  -server -printtoconcole
 
5.编译bitcoin代码，本机ubuntu16.04 64bit，用户名ubuntu，使用berkeley-db6。
5.1下载bitcoin
cd ~
git clone https://github.com/bitcoin/bitcoin.git
5.2下载安装db6
cd bitcoin
wget 'http://download.oracle.com/berkeley-db/db-6.2.32.NC.tar.gz'
tar -xzvf db-6.2.32.NC.tar.gz
cd db-6.2.32.NC/build_unix/
../dist/configure --enable-cxx --disable-shared --with-pic --prefix=/home/ubuntu/bitcoin/db6/
sudo make install
5.3编译安装
cd ~/bitcoin/
./autogen.sh
./configure LDFLAGS="-L/home/ubuntu/bitcoin/db6/lib/" CPPFLAGS="-I/home/ubuntu/bitcoin/db6/include/" --with-incompatible-bdb
sudo make
sudo make install
5.4证明安装成功，通过以下命令行进行验证：
$ which bitcoind
/usr/local/bin/bitcoind
$ which bitcoin-cli
/usr/local/bin/bitcoin-cli
如果有类似上述的输出，就完成了进入比特币源码世界的第一步了。
5.5运行程序，定位到我们的根目录下，～/jincoin/
上传了两天github都没上去，坑，转用gitee。
运行前端
bitcoin-qt
服务端
bitcoind  -server -printtoconcole
 6.修改源码




多节点FastCoin山寨币的搭建
 发表于 Apr 8 2018 |  0 comments |  阅读次数 157
这篇文章给出了Fastcoin多节点环境的搭建文档，FastCoin是一个由@harrywu修改BitCoin源代码产生的一个简单的山寨币。该山寨币在原有BitCoin源码基础上，对BitCoin相关网络参数、创世块信息、工作量机制等进行了修改，从而构建出了一个简单的山寨币系统，该系统加快了原有的挖矿速度，能够更方便的进行区块链开发的相关测试。

1 FastCoin简介
FastCoin是一个由@harrywu修改BitCoin源代码产生的一个简单的山寨币。该山寨币在原有BitCoin源码基础上，对BitCoin相关网络参数、创世块信息、工作量机制等进行了修改，从而构建出了一个简单的山寨币系统，该系统加快了原有的挖矿速度，能够更方便的进行区块链开发的相关测试。

2 系统环境
该文档的采用了两个节点进行测试，两个节点的系统环境如下：

OS: Ubuntu
Linux Kernel: Linux 4.4.0
Memory: 1G
gcc Version: 5.4.0
g++ Version: 5.4.0
3 安装准备
该文档采用两个节点对FastCoin山寨币进行搭建，两个节点做同样的配置。

3.1 获取FastCoin源码
git clone https://github.com/imharrywu/fastcoin.git
3.2 安装项目构建依赖
sudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev
3.3 安装Berkeley DB 4.8
cd fastcoin/
BITCOIN_ROOT=$(pwd)

# 选择 Berkeley DB安装路径，此处为fastcoin子目录下
BDB_PREFIX="${BITCOIN_ROOT}/db4"
mkdir -p $BDB_PREFIX

# 获取源码
wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'

# 校验
echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c

# 输出结应该为： -> db-4.8.30.NC.tar.gz: OK

# 解压
tar -xzvf db-4.8.30.NC.tar.gz

# 构建安装
cd db-4.8.30.NC/build_unix/
../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX
make install
3.4 安装Boost
sudo apt-get install libboost-all-dev
3.5 安装miniupnp
wget http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.20120410.tar.gz
tar -xzvf miniupnpc-1.6.20120410.tar.gz
cd miniupnpc-1.6
make
sudo make install
也可以使用Ubuntu源进行安装：

sudo apt-get install libminiupnpc-dev
4 搭建过程
4.1 编译源码
./autogen.sh
./configure --with-miniupnpc --without-gui --enable-upnp-default LDFLAGS="-L${BDB_PREFIX}/lib/" CPPFLAGS="-I${BDB_PREFIX}/include/" --enable-wallet
make
make install
编译安装之后，在src目录下会生成相应的二进制文件，主要用到的二进制文件有：

bitcoind：fastcoin主程序
bitcoin-cli：fastcoin RPC控制台程序
如果在编译过程中遭遇如下报错信息，详见【6.1 Boost依赖库引起的报错】：

/usr/include/boost/variant/get.hpp:178:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT_MSG(
     ^
Makefile:3654: recipe for target 'libbitcoin_server_a-rpcrawtransaction.o' failed
make[2]: *** [libbitcoin_server_a-rpcrawtransaction.o] Error 1
4.2 相关configuration参数
--without-gui：不使用GUI，如果需要图形化界面，详见【6.6 图形化界面钱包的构建】
--enable-wallet:启用钱包（不启用钱包--disable-wallet也可以进行挖矿，如果不启用钱包，则无需安装Berkeley DB）
--enable-debug:启用debug模式
--enable-tests:对测试程序进行编译
CPPFLAGS、LDFLAGS：指定Berkeley DB的路径
5 FastCoin测试
5.1 FastCoin配置文件
vi ~/.fastcoin/fastcoin.conf
在fastcoin.conf文件中添加如下配置信息：

# 用户名
rpcuser=user
# 密码
rpcpassword=password

daemon=1
txindex=1
server=1
5.2 启动bitcoind
在其中一个节点中执行：

cd fastcoin/src
./bitcoind -gen=1 -reindex -checkpoints=0
另一个节点执行：

./bitcoind -gen=1 -reindex -checkpoints=0 -addnode="192.168.56.101"


另一个节点的IP，例：192.169.1.233"
5.3 bitcoind相关启动参数
-rpcuser=：指定用户名
-rpcpassword=：指定密码
-daemon=：bitcoind作为daemon进程在后台运行
-gen=：生成山寨币（挖矿）
-addnode=：添加节点
-reindex：bitcoind启动时从当前blk000??.dat文件中的index重建区块链
-server：启用RPC服务器
5.4 bitcoin-cli
使用./bitcoin-cli <parameters>可以查看当前区块链、网络、钱包等信息。

相关参数有：

== Blockchain ==
getbestblockhash
getblock "hash" ( verbose )
getblockchaininfo
getblockcount
getblockhash index
getchaintips
getdifficulty
getmempoolinfo
getrawmempool ( verbose )
gettxout "txid" n ( includemempool )
gettxoutsetinfo
verifychain ( checklevel numblocks )

== Control ==
getinfo
help ( "command" )
stop

== Generating ==
getgenerate
setgenerate generate ( genproclimit )

== Mining ==
getblocktemplate ( "jsonrequestobject" )
getmininginfo
getnetworkhashps ( blocks height )
prioritisetransaction <txid> <priority delta> <fee delta>
submitblock "hexdata" ( "jsonparametersobject" )

== Network ==
addnode "node" "add|remove|onetry"
getaddednodeinfo dns ( "node" )
getconnectioncount
getnettotals
getnetworkinfo
getpeerinfo
ping

== Rawtransactions ==
createrawtransaction [{"txid":"id","vout":n},...] {"address":amount,...}
decoderawtransaction "hexstring"
decodescript "hex"
getrawtransaction "txid" ( verbose )
sendrawtransaction "hexstring" ( allowhighfees )
signrawtransaction "hexstring" ( [{"txid":"id","vout":n,"scriptPubKey":"hex","redeemScript":"hex"},...] ["privatekey1",...] sighashtype )

== Util ==
createmultisig nrequired ["key",...]
estimatefee nblocks
estimatepriority nblocks
validateaddress "fastcoinaddress"
verifymessage "fastcoinaddress" "signature" "message"

== Wallet ==
addmultisigaddress nrequired ["key",...] ( "account" )
backupwallet "destination"
dumpprivkey "fastcoinaddress"
dumpwallet "filename"
encryptwallet "passphrase"
getaccount "fastcoinaddress"
getaccountaddress "account"
getaddressesbyaccount "account"
getbalance ( "account" minconf includeWatchonly )
getnewaddress ( "account" )
getrawchangeaddress
getreceivedbyaccount "account" ( minconf )
getreceivedbyaddress "fastcoinaddress" ( minconf )
gettransaction "txid" ( includeWatchonly )
getunconfirmedbalance
getwalletinfo
importaddress "address" ( "label" rescan )
importprivkey "fastcoinprivkey" ( "label" rescan )
importwallet "filename"
keypoolrefill ( newsize )
listaccounts ( minconf includeWatchonly)
listaddressgroupings
listlockunspent
listreceivedbyaccount ( minconf includeempty includeWatchonly)
listreceivedbyaddress ( minconf includeempty includeWatchonly)
listsinceblock ( "blockhash" target-confirmations includeWatchonly)
listtransactions ( "account" count from includeWatchonly)
listunspent ( minconf maxconf  ["address",...] )
lockunspent unlock [{"txid":"txid","vout":n},...]
move "fromaccount" "toaccount" amount ( minconf "comment" )
sendfrom "fromaccount" "tofastcoinaddress" amount ( minconf "comment" "comment-to" )
sendmany "fromaccount" {"address":amount,...} ( minconf "comment" )
sendtoaddress "fastcoinaddress" amount ( "comment" "comment-to" )
setaccount "fastcoinaddress" "account"
settxfee amount
signmessage "fastcoinaddress" "message"
具体的RPC调用可以参考BitCoin RPC API文档。

6 注意事项
6.1 Boost依赖库引起的报错
如果在编译FastCoin源码过程中遭遇如下报错信息，则需要我们对FastCoin源码进行修改：

/usr/include/boost/variant/get.hpp:178:5: error: invalid application of 'sizeof' to incomplete type 'boost::STATIC_ASSERTION_FAILURE<false>'
     BOOST_STATIC_ASSERT_MSG(
     ^
Makefile:3654: recipe for target 'libbitcoin_server_a-rpcrawtransaction.o' failed
make[2]: *** [libbitcoin_server_a-rpcrawtransaction.o] Error 1
将src/rpcrawtransaction.c文件中的第288行：

const CScriptID& hash = boost::get<const CScriptID&>(address);
修改为：

const CScriptID& hash = boost::get<CScriptID>(address);
6.2 Berkeley DB安装问题
如果不想对Berkeley DB的源码进行编译安装，还可以直接采用Debian源进行安装：

sudo add-apt-repository ppa:bitcoin/bitcoin
sudo apt-get update
sudo apt-get install libdb4.8-dev libdb4.8++-dev
6.3 nTXConfirmTarget参数
该参数是确认目标值，用于计算矿工费用，默认值为1，适用于双节点的系统，如需对该参数进行修改。可以在执行./bitcoind时添加参数-txconfirmtarget=number进行配置。

6.4 txindex参数问题
如果在~/.fastcoin/fastcoin.conf配置文件中添加了txindex参数，则需要在启动bitcoind时添加启动参数—reindex。

6.5 图形化界面钱包的构建
如需使用图形化界面的钱包，需要安装QT并且在./congfiguration时不使用--without-gui选项，FastCoin默认使用QT4：

sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler
如需使用QT5，需要采用--with-gui=qt5选项，并安装QT5：

sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
本文的版权归作者 罗远航 所有，采用 Attribution-NonCommercial 3.0 License。任何人可以进行转载、分享，但不可在未经允许的情况下用于商业用途；转载请注明出处。感谢配合！

